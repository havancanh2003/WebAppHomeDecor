// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppHomeDecor.Infrastructure;

#nullable disable

namespace WebAppHomeDecor.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppHomeDecor.Domain.BaseEntities.BaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("BaseEntity");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WebAppHomeDecor.Domain.Entities.ItemToCart", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRemoveToCart")
                        .HasColumnType("bit");

                    b.Property<int>("QuantityAddToCart")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.ToTable("ItemToCart", (string)null);
                });

            modelBuilder.Entity("WebAppHomeDecor.Domain.Entities.Category", b =>
                {
                    b.HasBaseType("WebAppHomeDecor.Domain.BaseEntities.BaseEntity");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("WebAppHomeDecor.Domain.Entities.Product", b =>
                {
                    b.HasBaseType("WebAppHomeDecor.Domain.BaseEntities.BaseEntity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quanlity")
                        .HasColumnType("int");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("WebAppHomeDecor.Domain.Entities.Category", b =>
                {
                    b.HasOne("WebAppHomeDecor.Domain.BaseEntities.BaseEntity", null)
                        .WithOne()
                        .HasForeignKey("WebAppHomeDecor.Domain.Entities.Category", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAppHomeDecor.Domain.Entities.Product", b =>
                {
                    b.HasOne("WebAppHomeDecor.Domain.BaseEntities.BaseEntity", null)
                        .WithOne()
                        .HasForeignKey("WebAppHomeDecor.Domain.Entities.Product", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
